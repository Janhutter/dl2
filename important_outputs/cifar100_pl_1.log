[25/04/19 20:58:13] [utils.py:   37]: PyTorch Version: torch=2.5.0+cu124, cuda=12.4, cudnn=90100
[25/04/19 20:58:13] [utils.py:   39]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: ./ckpt
CORRUPTION:
  DATASET: cifar100
  IMG_SIZE: 32
  NUM_CHANNEL: 3
  NUM_CLASSES: 100
  NUM_EX: 10000
  SEVERITY: [5, 4, 3, 2, 1]
  TYPE: ['gaussian_noise', 'shot_noise', 'impulse_noise', 'defocus_blur', 'glass_blur', 'motion_blur', 'zoom_blur', 'snow', 'frost', 'fog', 'brightness', 'contrast', 'elastic_transform', 'pixelate', 'jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: ./data/cifar100
DESC: 
EATA:
  D_MARGIN: 0.05
  E_MARGIN: 2.763102111592855
  FISHER_ALPHA: 2000.0
  FISHER_SIZE: 2000
  USE_FISHER: False
EBM:
  BUFFER_SIZE: 10000
  REINIT_FREQ: 0.05
  SGLD_LR: 1.0
  SGLD_STD: 0.01
  STEPS: 20
  UNCOND: uncond
LOG_DEST: pl_bn_sgd-1-0.0001-200_250419-205813.txt
LOG_TIME: 250419-205813
MODEL:
  ADAPTATION: pl
  ADA_PARAM: ['bn']
  ARCH: WRN2810_BN
  EPISODIC: False
OPTIM:
  BATCH_SIZE: 200
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0001
  METHOD: SGD
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
PL:
  ALPHA: 0.1
  THRESHOLD: 0.9
RNG_SEED: 1
SAR:
  MARGIN_E0: 2.763102111592855
SAVE_DIR: ./save/cifar100/bn-wrn-28-10
SHOT:
  CLF_COEFF: 0.1
  THRESHOLD: 0.9
TEST:
  
/gpfs/home5/scur2578/tea/main.py:33: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(os.path.join(cfg.CKPT_DIR ,'{}/{}.pth'.format(cfg.CORRUPTION.DATASET, cfg.MODEL.ARCH)))
[25/04/19 20:58:14] [main.py:   75]: test-time adaptation: PL
[25/04/19 20:58:14] [setada.py:  187]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=100, bias=True)
)
[25/04/19 20:58:14] [eval.py:   70]: resetting model
[25/04/19 20:58:21] [eval.py:   78]: acc % [gaussian_noise5]: 1.60%
[25/04/19 20:58:21] [eval.py:   70]: resetting model
[25/04/19 20:58:26] [eval.py:   78]: acc % [gaussian_noise4]: 1.61%
[25/04/19 20:58:26] [eval.py:   70]: resetting model
[25/04/19 20:58:32] [eval.py:   78]: acc % [gaussian_noise3]: 2.24%
[25/04/19 20:58:32] [eval.py:   70]: resetting model
[25/04/19 20:58:38] [eval.py:   78]: acc % [gaussian_noise2]: 3.07%
[25/04/19 20:58:38] [eval.py:   70]: resetting model
[25/04/19 20:58:43] [eval.py:   78]: acc % [gaussian_noise1]: 10.63%
[25/04/19 20:58:43] [eval.py:   70]: resetting model
[25/04/19 20:58:49] [eval.py:   78]: acc % [shot_noise5]: 1.63%
[25/04/19 20:58:49] [eval.py:   70]: resetting model
[25/04/19 20:58:55] [eval.py:   78]: acc % [shot_noise4]: 1.97%
[25/04/19 20:58:55] [eval.py:   70]: resetting model
[25/04/19 20:59:00] [eval.py:   78]: acc % [shot_noise3]: 3.16%
[25/04/19 20:59:00] [eval.py:   70]: resetting model
[25/04/19 20:59:06] [eval.py:   78]: acc % [shot_noise2]: 9.34%
[25/04/19 20:59:06] [eval.py:   70]: resetting model
[25/04/19 20:59:12] [eval.py:   78]: acc % [shot_noise1]: 66.21%
[25/04/19 20:59:12] [eval.py:   70]: resetting model
[25/04/19 20:59:17] [eval.py:   78]: acc % [impulse_noise5]: 1.30%
[25/04/19 20:59:17] [eval.py:   70]: resetting model
[25/04/19 20:59:23] [eval.py:   78]: acc % [impulse_noise4]: 1.52%
[25/04/19 20:59:23] [eval.py:   70]: resetting model
[25/04/19 20:59:29] [eval.py:   78]: acc % [impulse_noise3]: 8.37%
[25/04/19 20:59:29] [eval.py:   70]: resetting model
[25/04/19 20:59:34] [eval.py:   78]: acc % [impulse_noise2]: 23.96%
[25/04/19 20:59:34] [eval.py:   70]: resetting model
[25/04/19 20:59:40] [eval.py:   78]: acc % [impulse_noise1]: 64.91%
[25/04/19 20:59:40] [eval.py:   70]: resetting model
[25/04/19 20:59:46] [eval.py:   78]: acc % [defocus_blur5]: 7.78%
[25/04/19 20:59:46] [eval.py:   70]: resetting model
[25/04/19 20:59:51] [eval.py:   78]: acc % [defocus_blur4]: 72.30%
[25/04/19 20:59:51] [eval.py:   70]: resetting model
[25/04/19 20:59:57] [eval.py:   78]: acc % [defocus_blur3]: 76.27%
[25/04/19 20:59:57] [eval.py:   70]: resetting model
[25/04/19 21:00:03] [eval.py:   78]: acc % [defocus_blur2]: 77.24%
[25/04/19 21:00:03] [eval.py:   70]: resetting model
[25/04/19 21:00:08] [eval.py:   78]: acc % [defocus_blur1]: 78.89%
[25/04/19 21:00:08] [eval.py:   70]: resetting model
[25/04/19 21:00:14] [eval.py:   78]: acc % [glass_blur5]: 2.23%
[25/04/19 21:00:14] [eval.py:   70]: resetting model
[25/04/19 21:00:20] [eval.py:   78]: acc % [glass_blur4]: 1.76%
[25/04/19 21:00:20] [eval.py:   70]: resetting model
[25/04/19 21:00:25] [eval.py:   78]: acc % [glass_blur3]: 3.28%
[25/04/19 21:00:25] [eval.py:   70]: resetting model
[25/04/19 21:00:31] [eval.py:   78]: acc % [glass_blur2]: 2.47%
[25/04/19 21:00:31] [eval.py:   70]: resetting model
[25/04/19 21:00:37] [eval.py:   78]: acc % [glass_blur1]: 2.25%
[25/04/19 21:00:37] [eval.py:   70]: resetting model
[25/04/19 21:00:43] [eval.py:   78]: acc % [motion_blur5]: 60.05%
[25/04/19 21:00:43] [eval.py:   70]: resetting model
[25/04/19 21:00:48] [eval.py:   78]: acc % [motion_blur4]: 68.37%
[25/04/19 21:00:48] [eval.py:   70]: resetting model
[25/04/19 21:00:54] [eval.py:   78]: acc % [motion_blur3]: 67.83%
[25/04/19 21:00:54] [eval.py:   70]: resetting model
[25/04/19 21:01:00] [eval.py:   78]: acc % [motion_blur2]: 70.92%
[25/04/19 21:01:00] [eval.py:   70]: resetting model
[25/04/19 21:01:05] [eval.py:   78]: acc % [motion_blur1]: 75.88%
[25/04/19 21:01:05] [eval.py:   70]: resetting model
[25/04/19 21:01:11] [eval.py:   78]: acc % [zoom_blur5]: 27.48%
[25/04/19 21:01:11] [eval.py:   70]: resetting model
[25/04/19 21:01:17] [eval.py:   78]: acc % [zoom_blur4]: 70.64%
[25/04/19 21:01:17] [eval.py:   70]: resetting model
[25/04/19 21:01:22] [eval.py:   78]: acc % [zoom_blur3]: 72.57%
[25/04/19 21:01:22] [eval.py:   70]: resetting model
[25/04/19 21:01:28] [eval.py:   78]: acc % [zoom_blur2]: 74.34%
[25/04/19 21:01:28] [eval.py:   70]: resetting model
[25/04/19 21:01:34] [eval.py:   78]: acc % [zoom_blur1]: 75.65%
[25/04/19 21:01:34] [eval.py:   70]: resetting model
[25/04/19 21:01:39] [eval.py:   78]: acc % [snow5]: 56.17%
[25/04/19 21:01:39] [eval.py:   70]: resetting model
[25/04/19 21:01:45] [eval.py:   78]: acc % [snow4]: 58.65%
[25/04/19 21:01:45] [eval.py:   70]: resetting model
[25/04/19 21:01:51] [eval.py:   78]: acc % [snow3]: 63.44%
[25/04/19 21:01:51] [eval.py:   70]: resetting model
[25/04/19 21:01:56] [eval.py:   78]: acc % [snow2]: 62.41%
[25/04/19 21:01:56] [eval.py:   70]: resetting model
[25/04/19 21:02:02] [eval.py:   78]: acc % [snow1]: 70.57%
[25/04/19 21:02:02] [eval.py:   70]: resetting model
[25/04/19 21:02:08] [eval.py:   78]: acc % [frost5]: 7.01%
[25/04/19 21:02:08] [eval.py:   70]: resetting model
[25/04/19 21:02:13] [eval.py:   78]: acc % [frost4]: 16.84%
[25/04/19 21:02:13] [eval.py:   70]: resetting model
[25/04/19 21:02:19] [eval.py:   78]: acc % [frost3]: 58.04%
[25/04/19 21:02:19] [eval.py:   70]: resetting model
[25/04/19 21:02:25] [eval.py:   78]: acc % [frost2]: 67.44%
[25/04/19 21:02:25] [eval.py:   70]: resetting model
[25/04/19 21:02:30] [eval.py:   78]: acc % [frost1]: 72.57%
[25/04/19 21:02:30] [eval.py:   70]: resetting model
[25/04/19 21:02:36] [eval.py:   78]: acc % [fog5]: 53.97%
[25/04/19 21:02:36] [eval.py:   70]: resetting model
[25/04/19 21:02:41] [eval.py:   78]: acc % [fog4]: 72.39%
[25/04/19 21:02:41] [eval.py:   70]: resetting model
[25/04/19 21:02:47] [eval.py:   78]: acc % [fog3]: 75.36%
[25/04/19 21:02:47] [eval.py:   70]: resetting model
[25/04/19 21:02:53] [eval.py:   78]: acc % [fog2]: 76.30%
[25/04/19 21:02:53] [eval.py:   70]: resetting model
[25/04/19 21:02:58] [eval.py:   78]: acc % [fog1]: 78.40%
[25/04/19 21:02:58] [eval.py:   70]: resetting model
[25/04/19 21:03:04] [eval.py:   78]: acc % [brightness5]: 72.81%
[25/04/19 21:03:04] [eval.py:   70]: resetting model
[25/04/19 21:03:10] [eval.py:   78]: acc % [brightness4]: 76.06%
[25/04/19 21:03:10] [eval.py:   70]: resetting model
[25/04/19 21:03:15] [eval.py:   78]: acc % [brightness3]: 77.02%
[25/04/19 21:03:15] [eval.py:   70]: resetting model
[25/04/19 21:03:21] [eval.py:   78]: acc % [brightness2]: 77.77%
[25/04/19 21:03:21] [eval.py:   70]: resetting model
[25/04/19 21:03:27] [eval.py:   78]: acc % [brightness1]: 78.53%
[25/04/19 21:03:27] [eval.py:   70]: resetting model
[25/04/19 21:03:32] [eval.py:   78]: acc % [contrast5]: 5.53%
[25/04/19 21:03:32] [eval.py:   70]: resetting model
[25/04/19 21:03:38] [eval.py:   78]: acc % [contrast4]: 69.48%
[25/04/19 21:03:38] [eval.py:   70]: resetting model
[25/04/19 21:03:44] [eval.py:   78]: acc % [contrast3]: 74.12%
[25/04/19 21:03:44] [eval.py:   70]: resetting model
[25/04/19 21:03:49] [eval.py:   78]: acc % [contrast2]: 76.76%
[25/04/19 21:03:49] [eval.py:   70]: resetting model
[25/04/19 21:03:55] [eval.py:   78]: acc % [contrast1]: 78.48%
[25/04/19 21:03:55] [eval.py:   70]: resetting model
[25/04/19 21:04:01] [eval.py:   78]: acc % [elastic_transform5]: 39.59%
[25/04/19 21:04:01] [eval.py:   70]: resetting model
[25/04/19 21:04:06] [eval.py:   78]: acc % [elastic_transform4]: 62.71%
[25/04/19 21:04:06] [eval.py:   70]: resetting model
[25/04/19 21:04:12] [eval.py:   78]: acc % [elastic_transform3]: 71.29%
[25/04/19 21:04:12] [eval.py:   70]: resetting model
[25/04/19 21:04:18] [eval.py:   78]: acc % [elastic_transform2]: 71.48%
[25/04/19 21:04:18] [eval.py:   70]: resetting model
[25/04/19 21:04:23] [eval.py:   78]: acc % [elastic_transform1]: 72.33%
[25/04/19 21:04:23] [eval.py:   70]: resetting model
[25/04/19 21:04:29] [eval.py:   78]: acc % [pixelate5]: 4.52%
[25/04/19 21:04:29] [eval.py:   70]: resetting model
[25/04/19 21:04:35] [eval.py:   78]: acc % [pixelate4]: 63.88%
[25/04/19 21:04:35] [eval.py:   70]: resetting model
[25/04/19 21:04:40] [eval.py:   78]: acc % [pixelate3]: 60.97%
[25/04/19 21:04:40] [eval.py:   70]: resetting model
[25/04/19 21:04:46] [eval.py:   78]: acc % [pixelate2]: 72.48%
[25/04/19 21:04:46] [eval.py:   70]: resetting model
[25/04/19 21:04:52] [eval.py:   78]: acc % [pixelate1]: 74.62%
[25/04/19 21:04:52] [eval.py:   70]: resetting model
[25/04/19 21:04:57] [eval.py:   78]: acc % [jpeg_compression5]: 21.77%
[25/04/19 21:04:57] [eval.py:   70]: resetting model
[25/04/19 21:05:03] [eval.py:   78]: acc % [jpeg_compression4]: 32.91%
[25/04/19 21:05:03] [eval.py:   70]: resetting model
[25/04/19 21:05:09] [eval.py:   78]: acc % [jpeg_compression3]: 45.80%
[25/04/19 21:05:09] [eval.py:   70]: resetting model
[25/04/19 21:05:14] [eval.py:   78]: acc % [jpeg_compression2]: 43.59%
[25/04/19 21:05:14] [eval.py:   70]: resetting model
[25/04/19 21:05:20] [eval.py:   78]: acc % [jpeg_compression1]: 63.07%
[25/04/19 21:05:20] [eval.py:   84]: 
                          1         2         3         4         5      avg
gaussian_noise     0.016000  0.016100  0.022400  0.030700  0.106300  0.03830
shot_noise         0.016300  0.019700  0.031600  0.093400  0.662100  0.16462
impulse_noise      0.013000  0.015200  0.083700  0.239600  0.649100  0.20012
defocus_blur       0.077800  0.723000  0.762700  0.772400  0.788900  0.62496
glass_blur         0.022300  0.017600  0.032800  0.024700  0.022500  0.02398
motion_blur        0.600500  0.683700  0.678300  0.709200  0.758800  0.68610
zoom_blur          0.274800  0.706400  0.725700  0.743400  0.756500  0.64136
snow               0.561700  0.586500  0.634400  0.624100  0.705700  0.62248
frost              0.070100  0.168400  0.580400  0.674400  0.725700  0.44380
fog                0.539700  0.723900  0.753600  0.763000  0.784000  0.71284
brightness         0.728100  0.760600  0.770200  0.777700  0.785300  0.76438
contrast           0.055300  0.694800  0.741200  0.767600  0.784800  0.60874
elastic_transform  0.395900  0.627100  0.712900  0.714800  0.723300  0.63480
pixelate           0.045200  0.638800  0.609700  0.724800  0.746200  0.55294
jpeg_compression   0.217700  0.329100  0.458000  0.435900  0.630700  0.41428
average            0.242293  0.447393  0.506507  0.539713  0.641993  0.47558
[25/04/19 21:05:20] [eval.py:  125]: resetting model
[25/04/19 21:05:28] [eval.py:  137]: Test set Accuracy: 0.7817
Building model...
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
Files already downloaded and verified
torch.Size([10000, 3, 32, 32]) 10000
