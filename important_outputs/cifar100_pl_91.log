[25/04/19 20:58:17] [utils.py:   37]: PyTorch Version: torch=2.5.0+cu124, cuda=12.4, cudnn=90100
[25/04/19 20:58:17] [utils.py:   39]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: ./ckpt
CORRUPTION:
  DATASET: cifar100
  IMG_SIZE: 32
  NUM_CHANNEL: 3
  NUM_CLASSES: 100
  NUM_EX: 10000
  SEVERITY: [5, 4, 3, 2, 1]
  TYPE: ['gaussian_noise', 'shot_noise', 'impulse_noise', 'defocus_blur', 'glass_blur', 'motion_blur', 'zoom_blur', 'snow', 'frost', 'fog', 'brightness', 'contrast', 'elastic_transform', 'pixelate', 'jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: ./data/cifar100
DESC: 
EATA:
  D_MARGIN: 0.05
  E_MARGIN: 2.763102111592855
  FISHER_ALPHA: 2000.0
  FISHER_SIZE: 2000
  USE_FISHER: False
EBM:
  BUFFER_SIZE: 10000
  REINIT_FREQ: 0.05
  SGLD_LR: 1.0
  SGLD_STD: 0.01
  STEPS: 20
  UNCOND: uncond
LOG_DEST: pl_bn_sgd-1-0.0001-200_250419-205817.txt
LOG_TIME: 250419-205817
MODEL:
  ADAPTATION: pl
  ADA_PARAM: ['bn']
  ARCH: WRN2810_BN
  EPISODIC: False
OPTIM:
  BATCH_SIZE: 200
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0001
  METHOD: SGD
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
PL:
  ALPHA: 0.1
  THRESHOLD: 0.9
RNG_SEED: 91
SAR:
  MARGIN_E0: 2.763102111592855
SAVE_DIR: ./save/cifar100/bn-wrn-28-10
SHOT:
  CLF_COEFF: 0.1
  THRESHOLD: 0.9
TEST:
  
/gpfs/home5/scur2578/tea/main.py:33: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(os.path.join(cfg.CKPT_DIR ,'{}/{}.pth'.format(cfg.CORRUPTION.DATASET, cfg.MODEL.ARCH)))
[25/04/19 20:58:18] [main.py:   75]: test-time adaptation: PL
[25/04/19 20:58:18] [setada.py:  187]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=100, bias=True)
)
[25/04/19 20:58:18] [eval.py:   70]: resetting model
[25/04/19 20:58:25] [eval.py:   78]: acc % [gaussian_noise5]: 1.60%
[25/04/19 20:58:25] [eval.py:   70]: resetting model
[25/04/19 20:58:30] [eval.py:   78]: acc % [gaussian_noise4]: 1.61%
[25/04/19 20:58:30] [eval.py:   70]: resetting model
[25/04/19 20:58:36] [eval.py:   78]: acc % [gaussian_noise3]: 2.24%
[25/04/19 20:58:36] [eval.py:   70]: resetting model
[25/04/19 20:58:42] [eval.py:   78]: acc % [gaussian_noise2]: 3.07%
[25/04/19 20:58:42] [eval.py:   70]: resetting model
[25/04/19 20:58:47] [eval.py:   78]: acc % [gaussian_noise1]: 10.63%
[25/04/19 20:58:47] [eval.py:   70]: resetting model
[25/04/19 20:58:53] [eval.py:   78]: acc % [shot_noise5]: 1.63%
[25/04/19 20:58:53] [eval.py:   70]: resetting model
[25/04/19 20:58:59] [eval.py:   78]: acc % [shot_noise4]: 1.97%
[25/04/19 20:58:59] [eval.py:   70]: resetting model
[25/04/19 20:59:05] [eval.py:   78]: acc % [shot_noise3]: 3.16%
[25/04/19 20:59:05] [eval.py:   70]: resetting model
[25/04/19 20:59:10] [eval.py:   78]: acc % [shot_noise2]: 9.16%
[25/04/19 20:59:10] [eval.py:   70]: resetting model
[25/04/19 20:59:16] [eval.py:   78]: acc % [shot_noise1]: 66.47%
[25/04/19 20:59:16] [eval.py:   70]: resetting model
[25/04/19 20:59:22] [eval.py:   78]: acc % [impulse_noise5]: 1.30%
[25/04/19 20:59:22] [eval.py:   70]: resetting model
[25/04/19 20:59:27] [eval.py:   78]: acc % [impulse_noise4]: 1.52%
[25/04/19 20:59:27] [eval.py:   70]: resetting model
[25/04/19 20:59:33] [eval.py:   78]: acc % [impulse_noise3]: 8.03%
[25/04/19 20:59:33] [eval.py:   70]: resetting model
[25/04/19 20:59:39] [eval.py:   78]: acc % [impulse_noise2]: 24.73%
[25/04/19 20:59:39] [eval.py:   70]: resetting model
[25/04/19 20:59:44] [eval.py:   78]: acc % [impulse_noise1]: 63.27%
[25/04/19 20:59:44] [eval.py:   70]: resetting model
[25/04/19 20:59:50] [eval.py:   78]: acc % [defocus_blur5]: 7.79%
[25/04/19 20:59:50] [eval.py:   70]: resetting model
[25/04/19 20:59:56] [eval.py:   78]: acc % [defocus_blur4]: 72.34%
[25/04/19 20:59:56] [eval.py:   70]: resetting model
[25/04/19 21:00:01] [eval.py:   78]: acc % [defocus_blur3]: 76.04%
[25/04/19 21:00:01] [eval.py:   70]: resetting model
[25/04/19 21:00:07] [eval.py:   78]: acc % [defocus_blur2]: 77.63%
[25/04/19 21:00:07] [eval.py:   70]: resetting model
[25/04/19 21:00:13] [eval.py:   78]: acc % [defocus_blur1]: 78.69%
[25/04/19 21:00:13] [eval.py:   70]: resetting model
[25/04/19 21:00:18] [eval.py:   78]: acc % [glass_blur5]: 2.23%
[25/04/19 21:00:18] [eval.py:   70]: resetting model
[25/04/19 21:00:24] [eval.py:   78]: acc % [glass_blur4]: 1.76%
[25/04/19 21:00:24] [eval.py:   70]: resetting model
[25/04/19 21:00:30] [eval.py:   78]: acc % [glass_blur3]: 3.28%
[25/04/19 21:00:30] [eval.py:   70]: resetting model
[25/04/19 21:00:35] [eval.py:   78]: acc % [glass_blur2]: 2.47%
[25/04/19 21:00:35] [eval.py:   70]: resetting model
[25/04/19 21:00:41] [eval.py:   78]: acc % [glass_blur1]: 2.25%
[25/04/19 21:00:41] [eval.py:   70]: resetting model
[25/04/19 21:00:47] [eval.py:   78]: acc % [motion_blur5]: 62.92%
[25/04/19 21:00:47] [eval.py:   70]: resetting model
[25/04/19 21:00:52] [eval.py:   78]: acc % [motion_blur4]: 68.50%
[25/04/19 21:00:52] [eval.py:   70]: resetting model
[25/04/19 21:00:58] [eval.py:   78]: acc % [motion_blur3]: 67.71%
[25/04/19 21:00:58] [eval.py:   70]: resetting model
[25/04/19 21:01:04] [eval.py:   78]: acc % [motion_blur2]: 71.33%
[25/04/19 21:01:04] [eval.py:   70]: resetting model
[25/04/19 21:01:09] [eval.py:   78]: acc % [motion_blur1]: 75.48%
[25/04/19 21:01:09] [eval.py:   70]: resetting model
[25/04/19 21:01:15] [eval.py:   78]: acc % [zoom_blur5]: 31.04%
[25/04/19 21:01:15] [eval.py:   70]: resetting model
[25/04/19 21:01:21] [eval.py:   78]: acc % [zoom_blur4]: 70.74%
[25/04/19 21:01:21] [eval.py:   70]: resetting model
[25/04/19 21:01:26] [eval.py:   78]: acc % [zoom_blur3]: 72.65%
[25/04/19 21:01:26] [eval.py:   70]: resetting model
[25/04/19 21:01:32] [eval.py:   78]: acc % [zoom_blur2]: 74.07%
[25/04/19 21:01:32] [eval.py:   70]: resetting model
[25/04/19 21:01:38] [eval.py:   78]: acc % [zoom_blur1]: 75.37%
[25/04/19 21:01:38] [eval.py:   70]: resetting model
[25/04/19 21:01:43] [eval.py:   78]: acc % [snow5]: 55.85%
[25/04/19 21:01:43] [eval.py:   70]: resetting model
[25/04/19 21:01:49] [eval.py:   78]: acc % [snow4]: 60.05%
[25/04/19 21:01:49] [eval.py:   70]: resetting model
[25/04/19 21:01:55] [eval.py:   78]: acc % [snow3]: 62.24%
[25/04/19 21:01:55] [eval.py:   70]: resetting model
[25/04/19 21:02:00] [eval.py:   78]: acc % [snow2]: 62.34%
[25/04/19 21:02:01] [eval.py:   70]: resetting model
[25/04/19 21:02:06] [eval.py:   78]: acc % [snow1]: 71.32%
[25/04/19 21:02:06] [eval.py:   70]: resetting model
[25/04/19 21:02:12] [eval.py:   78]: acc % [frost5]: 7.30%
[25/04/19 21:02:12] [eval.py:   70]: resetting model
[25/04/19 21:02:18] [eval.py:   78]: acc % [frost4]: 16.59%
[25/04/19 21:02:18] [eval.py:   70]: resetting model
[25/04/19 21:02:23] [eval.py:   78]: acc % [frost3]: 59.24%
[25/04/19 21:02:23] [eval.py:   70]: resetting model
[25/04/19 21:02:29] [eval.py:   78]: acc % [frost2]: 65.98%
[25/04/19 21:02:29] [eval.py:   70]: resetting model
[25/04/19 21:02:35] [eval.py:   78]: acc % [frost1]: 72.48%
[25/04/19 21:02:35] [eval.py:   70]: resetting model
[25/04/19 21:02:40] [eval.py:   78]: acc % [fog5]: 46.89%
[25/04/19 21:02:40] [eval.py:   70]: resetting model
[25/04/19 21:02:46] [eval.py:   78]: acc % [fog4]: 72.49%
[25/04/19 21:02:46] [eval.py:   70]: resetting model
[25/04/19 21:02:52] [eval.py:   78]: acc % [fog3]: 74.74%
[25/04/19 21:02:52] [eval.py:   70]: resetting model
[25/04/19 21:02:57] [eval.py:   78]: acc % [fog2]: 76.97%
[25/04/19 21:02:57] [eval.py:   70]: resetting model
[25/04/19 21:03:03] [eval.py:   78]: acc % [fog1]: 78.52%
[25/04/19 21:03:03] [eval.py:   70]: resetting model
[25/04/19 21:03:09] [eval.py:   78]: acc % [brightness5]: 73.17%
[25/04/19 21:03:09] [eval.py:   70]: resetting model
[25/04/19 21:03:14] [eval.py:   78]: acc % [brightness4]: 75.92%
[25/04/19 21:03:14] [eval.py:   70]: resetting model
[25/04/19 21:03:20] [eval.py:   78]: acc % [brightness3]: 76.84%
[25/04/19 21:03:20] [eval.py:   70]: resetting model
[25/04/19 21:03:26] [eval.py:   78]: acc % [brightness2]: 77.32%
[25/04/19 21:03:26] [eval.py:   70]: resetting model
[25/04/19 21:03:31] [eval.py:   78]: acc % [brightness1]: 77.92%
[25/04/19 21:03:31] [eval.py:   70]: resetting model
[25/04/19 21:03:37] [eval.py:   78]: acc % [contrast5]: 5.68%
[25/04/19 21:03:37] [eval.py:   70]: resetting model
[25/04/19 21:03:43] [eval.py:   78]: acc % [contrast4]: 69.46%
[25/04/19 21:03:43] [eval.py:   70]: resetting model
[25/04/19 21:03:48] [eval.py:   78]: acc % [contrast3]: 74.19%
[25/04/19 21:03:48] [eval.py:   70]: resetting model
[25/04/19 21:03:54] [eval.py:   78]: acc % [contrast2]: 76.74%
[25/04/19 21:03:54] [eval.py:   70]: resetting model
[25/04/19 21:04:00] [eval.py:   78]: acc % [contrast1]: 78.14%
[25/04/19 21:04:00] [eval.py:   70]: resetting model
[25/04/19 21:04:05] [eval.py:   78]: acc % [elastic_transform5]: 27.74%
[25/04/19 21:04:05] [eval.py:   70]: resetting model
[25/04/19 21:04:11] [eval.py:   78]: acc % [elastic_transform4]: 58.39%
[25/04/19 21:04:11] [eval.py:   70]: resetting model
[25/04/19 21:04:17] [eval.py:   78]: acc % [elastic_transform3]: 71.18%
[25/04/19 21:04:17] [eval.py:   70]: resetting model
[25/04/19 21:04:22] [eval.py:   78]: acc % [elastic_transform2]: 73.20%
[25/04/19 21:04:22] [eval.py:   70]: resetting model
[25/04/19 21:04:28] [eval.py:   78]: acc % [elastic_transform1]: 72.27%
[25/04/19 21:04:28] [eval.py:   70]: resetting model
[25/04/19 21:04:34] [eval.py:   78]: acc % [pixelate5]: 4.52%
[25/04/19 21:04:34] [eval.py:   70]: resetting model
[25/04/19 21:04:39] [eval.py:   78]: acc % [pixelate4]: 58.07%
[25/04/19 21:04:39] [eval.py:   70]: resetting model
[25/04/19 21:04:45] [eval.py:   78]: acc % [pixelate3]: 60.15%
[25/04/19 21:04:45] [eval.py:   70]: resetting model
[25/04/19 21:04:51] [eval.py:   78]: acc % [pixelate2]: 72.93%
[25/04/19 21:04:51] [eval.py:   70]: resetting model
[25/04/19 21:04:56] [eval.py:   78]: acc % [pixelate1]: 75.35%
[25/04/19 21:04:56] [eval.py:   70]: resetting model
[25/04/19 21:05:02] [eval.py:   78]: acc % [jpeg_compression5]: 23.93%
[25/04/19 21:05:02] [eval.py:   70]: resetting model
[25/04/19 21:05:08] [eval.py:   78]: acc % [jpeg_compression4]: 35.67%
[25/04/19 21:05:08] [eval.py:   70]: resetting model
[25/04/19 21:05:14] [eval.py:   78]: acc % [jpeg_compression3]: 49.73%
[25/04/19 21:05:14] [eval.py:   70]: resetting model
[25/04/19 21:05:19] [eval.py:   78]: acc % [jpeg_compression2]: 41.70%
[25/04/19 21:05:19] [eval.py:   70]: resetting model
[25/04/19 21:05:25] [eval.py:   78]: acc % [jpeg_compression1]: 63.48%
[25/04/19 21:05:25] [eval.py:   84]: 
                          1         2         3        4         5       avg
gaussian_noise     0.016000  0.016100  0.022400  0.03070  0.106300  0.038300
shot_noise         0.016300  0.019700  0.031600  0.09160  0.664700  0.164780
impulse_noise      0.013000  0.015200  0.080300  0.24730  0.632700  0.197700
defocus_blur       0.077900  0.723400  0.760400  0.77630  0.786900  0.624980
glass_blur         0.022300  0.017600  0.032800  0.02470  0.022500  0.023980
motion_blur        0.629200  0.685000  0.677100  0.71330  0.754800  0.691880
zoom_blur          0.310400  0.707400  0.726500  0.74070  0.753700  0.647740
snow               0.558500  0.600500  0.622400  0.62340  0.713200  0.623600
frost              0.073000  0.165900  0.592400  0.65980  0.724800  0.443180
fog                0.468900  0.724900  0.747400  0.76970  0.785200  0.699220
brightness         0.731700  0.759200  0.768400  0.77320  0.779200  0.762340
contrast           0.056800  0.694600  0.741900  0.76740  0.781400  0.608420
elastic_transform  0.277400  0.583900  0.711800  0.73200  0.722700  0.605560
pixelate           0.045200  0.580700  0.601500  0.72930  0.753500  0.542040
jpeg_compression   0.239300  0.356700  0.497300  0.41700  0.634800  0.429020
average            0.235727  0.443387  0.507613  0.53976  0.641093  0.473516
[25/04/19 21:05:25] [eval.py:  125]: resetting model
[25/04/19 21:05:33] [eval.py:  137]: Test set Accuracy: 0.7847
Building model...
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
Files already downloaded and verified
torch.Size([10000, 3, 32, 32]) 10000
