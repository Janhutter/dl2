[25/05/23 14:03:19] [utils.py:   82]: PyTorch Version: torch=2.5.0+cu124, cuda=12.4, cudnn=90100
[25/05/23 14:03:19] [utils.py:   83]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: ./ckpt
CORRUPTION:
  DATASET: cifar10
  IMG_SIZE: 32
  NUM_CHANNEL: 3
  NUM_CLASSES: 10
  NUM_EX: 10000
  SEVERITY: [5, 4, 3, 2, 1]
  TYPE: ['gaussian_noise', 'shot_noise', 'impulse_noise', 'defocus_blur', 'glass_blur', 'motion_blur', 'zoom_blur', 'snow', 'frost', 'fog', 'brightness', 'contrast', 'elastic_transform', 'pixelate', 'jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: /scratch-shared/tea2/cifar10
DESC: 
EARLY_STOP_BEGIN: 70
EARLY_STOP_PATIENCE: 30
EATA:
  D_MARGIN: 0.05
  E_MARGIN: 2.763102111592855
  FISHER_ALPHA: 2000.0
  FISHER_SIZE: 2000
  USE_FISHER: False
EBM:
  BUFFER_SIZE: 10000
  REINIT_FREQ: 0.05
  SGLD_LR: 0.1
  SGLD_STD: 0.01
  STEPS: 20
  UNCOND: uncond
LOG_DEST: energy_tet_bn_adam-1-0.001-200_uncond-20-0.1-0.01-10000-0.05_250523-140319.txt
LOG_TIME: 250523-140319
MODEL:
  ADAPTATION: energy
  ADA_PARAM: ['bn']
  ARCH: WRN2810_TET
  CHECKPOINT_PTH: None
  EPISODIC: False
OPTIM:
  BATCH_SIZE: 200
  BETA: 0.9
  CLIP_NORM: False
  DAMPENING: 0.0
  LAMBDA_CLS: 1.0
  LAMBDA_ENERGY: 1.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  N_EPOCHS: 200
  SCHEDULER_GAMMA: 0.2
  SCHEDULER_MILESTONES: [60, 120, 160]
  STEPS: 1
  TEST_BATCH_SIZE: 128
  WARMUP_START_LR: 1e-06
  WARMUP_STEPS: 1000
  WD: 0.0
OPTIM_ENERGY:
  BATCH_SIZE: 128
  BETA: 0.9
  CLIP_NORM: False
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
PL:
  ALPHA: 0.1
  THRESHOLD: 0.9
RNG_SEED: 1
SAR:
  MARGIN_E0: 2.763102111592855
SAVE_DIR: ./save/cifar10/bn-wrn-28-10-tet
SHOT:
  CLF_COEFF: 0.1
  THRESHOLD: 0.9
TEST:
  
[25/05/23 14:03:20] [main.py:   69]: test-time adaptation: TET
[25/05/23 14:03:20] [param.py:   18]: adapting weights of batch-normalization layer
[25/05/23 14:03:20] [setada.py:  138]: model for adaptation: WideResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(16, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(16, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block2): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (block3): NetworkBlock(
    (layer): Sequential(
      (0): BasicBlock(
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (convShortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(2, 2), bias=False)
      )
      (1): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (2): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (3): BasicBlock(
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu1): ReLU(inplace=True)
        (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu2): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[25/05/23 14:03:20] [setada.py:  139]: params for adaptation: ['block1.layer.0.bn1.weight', 'block1.layer.0.bn1.bias', 'block1.layer.0.bn2.weight', 'block1.layer.0.bn2.bias', 'block1.layer.1.bn1.weight', 'block1.layer.1.bn1.bias', 'block1.layer.1.bn2.weight', 'block1.layer.1.bn2.bias', 'block1.layer.2.bn1.weight', 'block1.layer.2.bn1.bias', 'block1.layer.2.bn2.weight', 'block1.layer.2.bn2.bias', 'block1.layer.3.bn1.weight', 'block1.layer.3.bn1.bias', 'block1.layer.3.bn2.weight', 'block1.layer.3.bn2.bias', 'block2.layer.0.bn1.weight', 'block2.layer.0.bn1.bias', 'block2.layer.0.bn2.weight', 'block2.layer.0.bn2.bias', 'block2.layer.1.bn1.weight', 'block2.layer.1.bn1.bias', 'block2.layer.1.bn2.weight', 'block2.layer.1.bn2.bias', 'block2.layer.2.bn1.weight', 'block2.layer.2.bn1.bias', 'block2.layer.2.bn2.weight', 'block2.layer.2.bn2.bias', 'block2.layer.3.bn1.weight', 'block2.layer.3.bn1.bias', 'block2.layer.3.bn2.weight', 'block2.layer.3.bn2.bias', 'block3.layer.0.bn1.weight', 'block3.layer.0.bn1.bias', 'block3.layer.0.bn2.weight', 'block3.layer.0.bn2.bias', 'block3.layer.1.bn1.weight', 'block3.layer.1.bn1.bias', 'block3.layer.1.bn2.weight', 'block3.layer.1.bn2.bias', 'block3.layer.2.bn1.weight', 'block3.layer.2.bn1.bias', 'block3.layer.2.bn2.weight', 'block3.layer.2.bn2.bias', 'block3.layer.3.bn1.weight', 'block3.layer.3.bn1.bias', 'block3.layer.3.bn2.weight', 'block3.layer.3.bn2.bias', 'bn1.weight', 'bn1.bias']
[25/05/23 14:03:20] [setada.py:  140]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0.0
)
[25/05/23 14:03:20] [eval.py:   72]: resetting model
[25/05/23 14:04:45] [eval.py:   80]: acc % [gaussian_noise5]: 74.00%
[25/05/23 14:04:45] [eval.py:   72]: resetting model
[25/05/23 14:06:11] [eval.py:   80]: acc % [gaussian_noise4]: 77.64%
[25/05/23 14:06:11] [eval.py:   72]: resetting model
[25/05/23 14:07:37] [eval.py:   80]: acc % [gaussian_noise3]: 79.74%
[25/05/23 14:07:37] [eval.py:   72]: resetting model
[25/05/23 14:09:01] [eval.py:   80]: acc % [gaussian_noise2]: 84.72%
[25/05/23 14:09:01] [eval.py:   72]: resetting model
[25/05/23 14:10:24] [eval.py:   80]: acc % [gaussian_noise1]: 88.90%
[25/05/23 14:10:24] [eval.py:   72]: resetting model
[25/05/23 14:11:49] [eval.py:   80]: acc % [shot_noise5]: 76.60%
[25/05/23 14:11:49] [eval.py:   72]: resetting model
[25/05/23 14:13:12] [eval.py:   80]: acc % [shot_noise4]: 81.18%
[25/05/23 14:13:12] [eval.py:   72]: resetting model
[25/05/23 14:14:35] [eval.py:   80]: acc % [shot_noise3]: 83.01%
[25/05/23 14:14:35] [eval.py:   72]: resetting model
[25/05/23 14:16:00] [eval.py:   80]: acc % [shot_noise2]: 88.52%
[25/05/23 14:16:00] [eval.py:   72]: resetting model
[25/05/23 14:17:24] [eval.py:   80]: acc % [shot_noise1]: 90.89%
[25/05/23 14:17:24] [eval.py:   72]: resetting model
[25/05/23 14:18:49] [eval.py:   80]: acc % [impulse_noise5]: 68.03%
[25/05/23 14:18:49] [eval.py:   72]: resetting model
[25/05/23 14:20:15] [eval.py:   80]: acc % [impulse_noise4]: 74.16%
[25/05/23 14:20:15] [eval.py:   72]: resetting model
[25/05/23 14:21:39] [eval.py:   80]: acc % [impulse_noise3]: 82.03%
[25/05/23 14:21:39] [eval.py:   72]: resetting model
[25/05/23 14:23:04] [eval.py:   80]: acc % [impulse_noise2]: 85.00%
[25/05/23 14:23:04] [eval.py:   72]: resetting model
[25/05/23 14:24:30] [eval.py:   80]: acc % [impulse_noise1]: 89.18%
[25/05/23 14:24:30] [eval.py:   72]: resetting model
[25/05/23 14:25:57] [eval.py:   80]: acc % [defocus_blur5]: 86.85%
[25/05/23 14:25:57] [eval.py:   72]: resetting model
[25/05/23 14:27:24] [eval.py:   80]: acc % [defocus_blur4]: 90.89%
[25/05/23 14:27:24] [eval.py:   72]: resetting model
[25/05/23 14:28:48] [eval.py:   80]: acc % [defocus_blur3]: 92.55%
[25/05/23 14:28:48] [eval.py:   72]: resetting model
[25/05/23 14:30:13] [eval.py:   80]: acc % [defocus_blur2]: 92.86%
[25/05/23 14:30:13] [eval.py:   72]: resetting model
[25/05/23 14:31:37] [eval.py:   80]: acc % [defocus_blur1]: 93.19%
[25/05/23 14:31:37] [eval.py:   72]: resetting model
[25/05/23 14:33:02] [eval.py:   80]: acc % [glass_blur5]: 69.27%
[25/05/23 14:33:02] [eval.py:   72]: resetting model
[25/05/23 14:34:29] [eval.py:   80]: acc % [glass_blur4]: 69.35%
[25/05/23 14:34:29] [eval.py:   72]: resetting model
[25/05/23 14:35:53] [eval.py:   80]: acc % [glass_blur3]: 78.50%
[25/05/23 14:35:53] [eval.py:   72]: resetting model
[25/05/23 14:37:16] [eval.py:   80]: acc % [glass_blur2]: 78.14%
[25/05/23 14:37:16] [eval.py:   72]: resetting model
[25/05/23 14:38:40] [eval.py:   80]: acc % [glass_blur1]: 78.27%
[25/05/23 14:38:40] [eval.py:   72]: resetting model
[25/05/23 14:40:05] [eval.py:   80]: acc % [motion_blur5]: 85.24%
[25/05/23 14:40:05] [eval.py:   72]: resetting model
[25/05/23 14:41:31] [eval.py:   80]: acc % [motion_blur4]: 87.62%
[25/05/23 14:41:31] [eval.py:   72]: resetting model
[25/05/23 14:42:54] [eval.py:   80]: acc % [motion_blur3]: 87.94%
[25/05/23 14:42:54] [eval.py:   72]: resetting model
[25/05/23 14:44:19] [eval.py:   80]: acc % [motion_blur2]: 89.98%
[25/05/23 14:44:19] [eval.py:   72]: resetting model
[25/05/23 14:45:42] [eval.py:   80]: acc % [motion_blur1]: 91.66%
[25/05/23 14:45:42] [eval.py:   72]: resetting model
[25/05/23 14:47:07] [eval.py:   80]: acc % [zoom_blur5]: 87.70%
[25/05/23 14:47:07] [eval.py:   72]: resetting model
[25/05/23 14:48:34] [eval.py:   80]: acc % [zoom_blur4]: 89.75%
[25/05/23 14:48:34] [eval.py:   72]: resetting model
[25/05/23 14:49:59] [eval.py:   80]: acc % [zoom_blur3]: 90.51%
[25/05/23 14:49:59] [eval.py:   72]: resetting model
[25/05/23 14:51:22] [eval.py:   80]: acc % [zoom_blur2]: 91.32%
[25/05/23 14:51:22] [eval.py:   72]: resetting model
[25/05/23 14:52:45] [eval.py:   80]: acc % [zoom_blur1]: 91.42%
[25/05/23 14:52:45] [eval.py:   72]: resetting model
[25/05/23 14:54:09] [eval.py:   80]: acc % [snow5]: 82.57%
[25/05/23 14:54:09] [eval.py:   72]: resetting model
[25/05/23 14:55:36] [eval.py:   80]: acc % [snow4]: 83.31%
[25/05/23 14:55:36] [eval.py:   72]: resetting model
[25/05/23 14:57:00] [eval.py:   80]: acc % [snow3]: 85.55%
[25/05/23 14:57:00] [eval.py:   72]: resetting model
[25/05/23 14:58:27] [eval.py:   80]: acc % [snow2]: 86.31%
[25/05/23 14:58:27] [eval.py:   72]: resetting model
[25/05/23 14:59:50] [eval.py:   80]: acc % [snow1]: 90.02%
[25/05/23 14:59:50] [eval.py:   72]: resetting model
[25/05/23 15:01:16] [eval.py:   80]: acc % [frost5]: 82.50%
[25/05/23 15:01:16] [eval.py:   72]: resetting model
[25/05/23 15:02:42] [eval.py:   80]: acc % [frost4]: 86.33%
[25/05/23 15:02:42] [eval.py:   72]: resetting model
[25/05/23 15:04:13] [eval.py:   80]: acc % [frost3]: 85.72%
[25/05/23 15:04:13] [eval.py:   72]: resetting model
[25/05/23 15:05:36] [eval.py:   80]: acc % [frost2]: 88.98%
[25/05/23 15:05:36] [eval.py:   72]: resetting model
[25/05/23 15:07:00] [eval.py:   80]: acc % [frost1]: 91.19%
[25/05/23 15:07:00] [eval.py:   72]: resetting model
[25/05/23 15:08:25] [eval.py:   80]: acc % [fog5]: 84.99%
[25/05/23 15:08:25] [eval.py:   72]: resetting model
[25/05/23 15:09:50] [eval.py:   80]: acc % [fog4]: 89.97%
[25/05/23 15:09:50] [eval.py:   72]: resetting model
[25/05/23 15:11:14] [eval.py:   80]: acc % [fog3]: 91.80%
[25/05/23 15:11:14] [eval.py:   72]: resetting model
[25/05/23 15:12:38] [eval.py:   80]: acc % [fog2]: 92.78%
[25/05/23 15:12:38] [eval.py:   72]: resetting model
[25/05/23 15:14:02] [eval.py:   80]: acc % [fog1]: 93.16%
[25/05/23 15:14:02] [eval.py:   72]: resetting model
[25/05/23 15:15:28] [eval.py:   80]: acc % [brightness5]: 91.41%
[25/05/23 15:15:28] [eval.py:   72]: resetting model
[25/05/23 15:16:53] [eval.py:   80]: acc % [brightness4]: 92.32%
[25/05/23 15:16:53] [eval.py:   72]: resetting model
[25/05/23 15:18:16] [eval.py:   80]: acc % [brightness3]: 92.88%
[25/05/23 15:18:16] [eval.py:   72]: resetting model
[25/05/23 15:19:40] [eval.py:   80]: acc % [brightness2]: 92.98%
[25/05/23 15:19:40] [eval.py:   72]: resetting model
[25/05/23 15:21:03] [eval.py:   80]: acc % [brightness1]: 93.18%
[25/05/23 15:21:03] [eval.py:   72]: resetting model
[25/05/23 15:22:28] [eval.py:   80]: acc % [contrast5]: 85.29%
[25/05/23 15:22:28] [eval.py:   72]: resetting model
[25/05/23 15:23:53] [eval.py:   80]: acc % [contrast4]: 89.46%
[25/05/23 15:23:53] [eval.py:   72]: resetting model
[25/05/23 15:25:16] [eval.py:   80]: acc % [contrast3]: 91.13%
[25/05/23 15:25:16] [eval.py:   72]: resetting model
[25/05/23 15:26:40] [eval.py:   80]: acc % [contrast2]: 91.85%
[25/05/23 15:26:40] [eval.py:   72]: resetting model
[25/05/23 15:28:03] [eval.py:   80]: acc % [contrast1]: 92.95%
[25/05/23 15:28:03] [eval.py:   72]: resetting model
[25/05/23 15:29:30] [eval.py:   80]: acc % [elastic_transform5]: 78.62%
[25/05/23 15:29:30] [eval.py:   72]: resetting model
[25/05/23 15:30:57] [eval.py:   80]: acc % [elastic_transform4]: 85.16%
[25/05/23 15:30:57] [eval.py:   72]: resetting model
[25/05/23 15:32:24] [eval.py:   80]: acc % [elastic_transform3]: 89.94%
[25/05/23 15:32:24] [eval.py:   72]: resetting model
[25/05/23 15:33:48] [eval.py:   80]: acc % [elastic_transform2]: 90.32%
[25/05/23 15:33:48] [eval.py:   72]: resetting model
[25/05/23 15:35:12] [eval.py:   80]: acc % [elastic_transform1]: 90.09%
[25/05/23 15:35:12] [eval.py:   72]: resetting model
[25/05/23 15:36:37] [eval.py:   80]: acc % [pixelate5]: 80.99%
[25/05/23 15:36:37] [eval.py:   72]: resetting model
[25/05/23 15:38:04] [eval.py:   80]: acc % [pixelate4]: 87.12%
[25/05/23 15:38:04] [eval.py:   72]: resetting model
[25/05/23 15:39:31] [eval.py:   80]: acc % [pixelate3]: 89.50%
[25/05/23 15:39:31] [eval.py:   72]: resetting model
[25/05/23 15:40:55] [eval.py:   80]: acc % [pixelate2]: 90.45%
[25/05/23 15:40:55] [eval.py:   72]: resetting model
[25/05/23 15:42:18] [eval.py:   80]: acc % [pixelate1]: 91.85%
[25/05/23 15:42:18] [eval.py:   72]: resetting model
[25/05/23 15:43:43] [eval.py:   80]: acc % [jpeg_compression5]: 76.18%
[25/05/23 15:43:43] [eval.py:   72]: resetting model
[25/05/23 15:45:09] [eval.py:   80]: acc % [jpeg_compression4]: 78.95%
[25/05/23 15:45:09] [eval.py:   72]: resetting model
[25/05/23 15:46:35] [eval.py:   80]: acc % [jpeg_compression3]: 80.30%
[25/05/23 15:46:35] [eval.py:   72]: resetting model
[25/05/23 15:47:58] [eval.py:   80]: acc % [jpeg_compression2]: 82.40%
[25/05/23 15:47:58] [eval.py:   72]: resetting model
[25/05/23 15:49:22] [eval.py:   80]: acc % [jpeg_compression1]: 87.01%
[25/05/23 15:49:22] [eval.py:   86]: 
                          1        2       3         4         5       avg
gaussian_noise     0.740000  0.77640  0.7974  0.847200  0.889000  0.810000
shot_noise         0.766000  0.81180  0.8301  0.885200  0.908900  0.840400
impulse_noise      0.680300  0.74160  0.8203  0.850000  0.891800  0.796800
defocus_blur       0.868500  0.90890  0.9255  0.928600  0.931900  0.912680
glass_blur         0.692700  0.69350  0.7850  0.781400  0.782700  0.747060
motion_blur        0.852400  0.87620  0.8794  0.899800  0.916600  0.884880
zoom_blur          0.877000  0.89750  0.9051  0.913200  0.914200  0.901400
snow               0.825700  0.83310  0.8555  0.863100  0.900200  0.855520
frost              0.825000  0.86330  0.8572  0.889800  0.911900  0.869440
fog                0.849900  0.89970  0.9180  0.927800  0.931600  0.905400
brightness         0.914100  0.92320  0.9288  0.929800  0.931800  0.925540
contrast           0.852900  0.89460  0.9113  0.918500  0.929500  0.901360
elastic_transform  0.786200  0.85160  0.8994  0.903200  0.900900  0.868260
pixelate           0.809900  0.87120  0.8950  0.904500  0.918500  0.879820
jpeg_compression   0.761800  0.78950  0.8030  0.824000  0.870100  0.809680
average            0.806827  0.84214  0.8674  0.884407  0.901973  0.860549
[25/05/23 15:49:22] [eval.py:  127]: resetting model
[25/05/23 15:50:55] [eval.py:  139]: Test set Accuracy: 0.934
Building model...
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
torch.Size([10000, 3, 32, 32]) 10000
Files already downloaded and verified
torch.Size([10000, 3, 32, 32]) 10000
